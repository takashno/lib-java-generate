plugins {
	id 'java'
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'maven'
	id 'maven-publish'
	id 'jacoco'
	id "com.jfrog.bintray" version "1.8.4"
}

ext {
	// バージョン定義
	versionMajor = 0
	versionMinor = 0
	versionPatch = 3

	// アーティファクト関連
	group 'com.zomu_t'
	version "${versionMajor}.${versionMinor}.${versionPatch}"

	// Document
	siteUrl = 'https://github.com/takashno/lib-java-generate'

	// SCM（GitHub）
	githubUrl = 'https://github.com/takashno/lib-java-generate'
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {

	api group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.8.18'

	api group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

	api group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

    api group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'

	// ソースコードフォーマッター
    api 'com.google.googlejavaformat:google-java-format:1.3'

	// For Develop
	compileOnly 'org.projectlombok:lombok:1.18.6'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'

}

// JavaDoc
tasks.withType(Javadoc) {
	options.charSet = 'UTF-8'
	options.encoding = 'UTF-8'
	options.addBooleanOption('Xdoclint:none', true)
}

// Java
tasks.withType(JavaCompile) {
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
	it.options.encoding = 'UTF-8'
}

// JavaDoc Jar packaging
task packageJavadoc(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

// Source Jar Packaging
task packageSources(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
	classifier = 'source'
}

artifacts {
	archives packageJavadoc
	archives packageSources
}

// CodeCov
task codeCoverageReport(type: JacocoReport) {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	subprojects.each {
		sourceSets it.sourceSets.main
	}

	reports {
		xml.enabled true
		xml.destination project.file("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
	}
}

codeCoverageReport.dependsOn {
	subprojects*.test
}

// Library Publish
bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']

	pkg {
		repo = 'takashno_maven_repo'
		name = project.name
		userOrg = 'takashno'
		licenses = ['Apache-2.0']
		websiteUrl = siteUrl
		issueTrackerUrl = githubUrl + '/blob/master/LICENSE'
		vcsUrl = githubUrl + '.git'
		issueTrackerUrl = githubUrl + '/issues'
		publicDownloadNumbers = true
		version {
			name = project.version
		}
	}
}

install {
	repositories.mavenInstaller {
		pom.project {
			name project.name
			url siteUrl

			packaging 'jar'
			groupId project.group
			artifactId project.name
			version project.version

			licenses {
				license {
					name 'Apache License 2.0'
					url 'http://www.apache.org/licenses/'
					distribution 'repo'
				}
			}
			scm {
				connection githubUrl + '.git'
				url githubUrl
			}
		}
	}
}

task publishJavaDoc(type: Copy) {
	from ('build/docs/javadoc') {
		include '**/*.*'
	}
	into 'docs'
}
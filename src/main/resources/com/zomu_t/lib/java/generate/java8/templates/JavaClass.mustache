{{& commentHeader}}
package {{packageName}};

{{#imports}}
import {{#staticImport}}static {{/staticImport}}{{packageName}}{{#className}}.{{className}}{{/className}}{{#methodName}}.{{methodName}}{{/methodName}}{{#wildcard}}.*{{/wildcard}};
{{/imports}}

{{#javaDoc}}
/**
{{#inheritDoc}} * {@inheritDoc}{{/inheritDoc}}{{^inheritDoc}}{{#mainContents}} * {{& .}}<br>
{{/mainContents}}
 *
{{#annotations}} * @{{name}} {{#contents}}{{& .}} {{/contents}}
{{/annotations}}
 *
{{/inheritDoc}}
 */
{{/javaDoc}}
{{#annotations}}@{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}}
{{/annotations}}
{{#accessModifier}}{{.}} {{/accessModifier}}{{#typeModifier}}{{.}} {{/typeModifier}}{{classKind}} {{className}}{{#hasGenericTypes}}<{{/hasGenericTypes}}{{#genericTypes}}{{className}}{{^last}}, {{/last}}{{/genericTypes}}{{#hasGenericTypes}}>{{/hasGenericTypes}}{{!親クラス}}{{#superClass}} extends {{className}}{{#hasGenericTypes}}<{{/hasGenericTypes}}{{#genericTypes}}{{className}}{{^last}}, {{/last}}{{/genericTypes}}{{#hasGenericTypes}}>{{/hasGenericTypes}}{{/superClass}}{{!実装クラス}}{{#hasImplementsClasses}} implements {{/hasImplementsClasses}}{{#implementsClasses}}{{className}}{{#hasGenericTypes}}<{{/hasGenericTypes}}{{#genericTypes}}{{className}}{{^last}}, {{/last}}{{/genericTypes}}{{#hasGenericTypes}}>{{/hasGenericTypes}}{{^last}}, {{/last}}{{/implementsClasses}} {
{{#enumerators}}{{!列挙子}}

{{#javaDoc}}    /** {{#mainContents}}{{& .}}{{/mainContents}} */{{/javaDoc}}
    {{name}}({{#values}}{{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/values}}){{^last}},{{/last}}{{#last}};{{/last}}
{{/enumerators}}
{{#fields}}{{!フィールド}}

{{#javaDoc}}    /** {{#mainContents}}{{& .}}{{/mainContents}} */{{/javaDoc}}
{{#annotations}}    @{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}}
{{/annotations}}
    {{#accessModifier}}{{.}} {{/accessModifier}}{{#fieldModifier}}{{.}} {{/fieldModifier}}{{#type}}{{ClassName}}{{#array}}[]{{/array}}{{/type}} {{name}}{{#initializationValue}} = {{& .}}{{/initializationValue}};
{{/fields}}
{{#constructors}}{{!コンストラクタ}}

{{#javaDoc}}
    /**
{{#inheritDoc}}     * {@inheritDoc}{{/inheritDoc}}{{^inheritDoc}}{{#mainContents}}     * {{& .}}<br>
{{/mainContents}}
{{#annotations}}
     *
{{/annotations}}
{{#annotations}}     * @{{name}} {{#contents}}{{& .}} {{/contents}}
{{/annotations}}
     *
{{/inheritDoc}}
     */
{{/javaDoc}}
{{#annotations}}    @{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}}
{{/annotations}}
    {{#accessModifier}}{{.}} {{/accessModifier}} {{className}}({{#args}}{{#argModifier}}{{.}} {{/argModifier}}{{#annotations}}@{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}} {{/annotations}}{{#type}}{{className}}{{#array}}[]{{/array}}{{/type}} {{name}}{{^last}}, {{/last}}{{/args}}){{#hasThrowTypes}} throws {{/hasThrowTypes}}{{#throwsTypes}}{{className}}{{#hasGenericTypes}}<{{/hasGenericTypes}}{{#genericTypes}}{{className}}{{^last}}, {{/last}}{{/genericTypes}}{{#hasGenericTypes}}>{{/hasGenericTypes}}{{/throwsTypes}}{{#isAbstractMethod}};{{/isAbstractMethod}}{{^isAbstractMethod}} {
        {{#logic}}{{& content}}{{/logic}}{{^logic}}// TODO : To Be Logic...{{/logic}}
    }
{{/isAbstractMethod}}
{{/constructors}}
{{#methods}}{{!メソッド}}

{{#javaDoc}}
    /**
{{#inheritDoc}}     * {@inheritDoc}{{/inheritDoc}}{{^inheritDoc}}{{#mainContents}}     * {{& .}}<br>
{{/mainContents}}
{{#annotations}}
     *
{{/annotations}}
{{#annotations}}     * @{{name}} {{#contents}}{{& .}} {{/contents}}
{{/annotations}}
     *
{{/inheritDoc}}
     */
{{/javaDoc}}
{{#annotations}}    @{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}}
{{/annotations}}
    {{#accessModifier}}{{.}} {{/accessModifier}}{{#methodModifiers}}{{.}} {{/methodModifiers}}{{#returnType}}{{#type}}{{className}}{{/type}}{{#array}}[]{{/array}}{{/returnType}}{{^returnType}}void{{/returnType}} {{name}}({{#args}}{{#argModifier}}{{.}} {{/argModifier}}{{#annotations}}@{{className}}{{#hasAttributes}}({{/hasAttributes}}{{#attributes}}{{name}}={{#stringAttr}}"{{/stringAttr}}{{value}}{{#stringAttr}}"{{/stringAttr}}{{^last}}, {{/last}}{{/attributes}}{{#hasAttributes}}){{/hasAttributes}} {{/annotations}}{{#type}}{{className}}{{#array}}[]{{/array}}{{/type}} {{name}}{{^last}}, {{/last}}{{/args}}){{#hasThrowTypes}} throws {{/hasThrowTypes}}{{#throwsTypes}}{{className}}{{#hasGenericTypes}}<{{/hasGenericTypes}}{{#genericTypes}}{{className}}{{^last}}, {{/last}}{{/genericTypes}}{{#hasGenericTypes}}>{{/hasGenericTypes}}{{/throwsTypes}}{{#noneBlockMethod}};{{/noneBlockMethod}}{{^noneBlockMethod}} {
        {{#logic}}{{& content}}{{/logic}}{{^logic}}// TODO : To Be Logic...{{/logic}}
    }
{{/noneBlockMethod}}
{{/methods}}
}
